# -*- coding: utf-8 -*-
"""Similar apps from PS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YC5ZzHnhKONtPSv5rta8TDgC5qW65XOk
"""

from google.colab import auth
auth.authenticate_user()

import gspread
from oauth2client.client import GoogleCredentials

gc = gspread.authorize(GoogleCredentials.get_application_default())

import pandas as pd

pip install play-scraper

pip install google_play_scraper

import play_scraper as ps

from google_play_scraper import app

worksheet = gc.open('Gaming').sheet1

sheet_data=worksheet.get_all_values()

df = pd.DataFrame(sheet_data[1:],columns=sheet_data[0])

AppId=df['AppID']
print(len(AppId))
AppId[0:10]

def add_details_as_row(game_result):
    row=[]
    row.append(game_result['title'])
    row.append(game_result['appId'])
    row.append(game_result['url'])
    row.append(game_result['description'])
    row.append(game_result['summary'])
    row.append(game_result['installs'])
    row.append(game_result['minInstalls'])
    row.append(game_result['score'])
    row.append(game_result['ratings'])
    row.append(game_result['reviews'])
    row.append(game_result['price'])
    row.append(game_result['free'])
    row.append(game_result['currency'])
    row.append(game_result['offersIAP'])
    row.append(game_result['size'])
    row.append(game_result['androidVersion'])
    row.append(game_result['developer'])
    row.append(game_result['developerId'])
    row.append(game_result['developerEmail'])
    row.append(game_result['developerWebsite'])
    row.append(game_result['privacyPolicy'])
    row.append(game_result['developerInternalID'])
    row.append(game_result['genre'])
    row.append(game_result['genreId'])
    row.append(game_result['icon'])
    row.append(game_result['headerImage'])
    row.append(game_result['contentRating'])
    row.append(game_result['contentRatingDescription'])
    row.append(game_result['adSupported'])
    row.append(game_result['containsAds'])
    row.append(game_result['released'])
    row.append(game_result['updated'])
    row.append(game_result['version'])
    row.append(game_result['recentChanges'])
    row.append(game_result['comments'])
    return row;

PartAppId=AppId[1150:1204]
len(PartAppId)

recordsDF=pd.DataFrame()
print(recordsDF)

for i in PartAppId:
    print(i)

def getSimilarAppRecords(simApps):
  rs=pd.DataFrame()
  id =[]
  for x in simApps:
    url=x['url']
    id=url.split("id=")[1]
    each_game_result=app(id)
    eachrow=add_details_as_row(each_game_result)
    # print(eachrow)
    rs = rs.append([eachrow])
  
  return rs;

for i in PartAppId:
  try:
    similarApps= ps.similar(i,detailed=False)
    apprecs=getSimilarAppRecords(similarApps)
    recordsDF=recordsDF.append(apprecs)
  except(HTTPError, RuntimeError) as e:
    print(e)
    print(i)
    pass

# print(similarApps)
# print(len(similarApps))
#print(type(bulkresults))

len(recordsDF)
# recordsDF

recordsDF.to_csv('Batchfile.csv',index = False, header=True)

new_record=pd.read_csv('/content/Batchfile.csv',sep=',')
len(new_record)